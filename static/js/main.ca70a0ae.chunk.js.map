{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","displayName","language","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","intialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","frameBorder","sandbox","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAoDeA,MA1Cf,SAAgBC,GAAQ,IACZC,EAIJD,EAJIC,YACJC,EAGAF,EAHAE,SACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAJe,EAOKC,oBAAS,GAPd,mBAOZC,EAPY,KAONC,EAPM,KAanB,OACI,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAC5C,yBAAKE,UAAU,gBACVP,EACD,4BACIQ,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAEpC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAItD,kBAAC,aAAD,CACIC,eAlBZ,SAAsBC,EAAQC,EAAMd,GAChCC,EAASD,IAkBDA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMnB,EACNoB,aAAa,EACbC,MAAO,gBCzCZ,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,iBAGkBF,EADyB,EAG5BpB,oBAAS,WAC/B,IAAMuB,EAAYC,aAAaC,QAAQH,GAEvC,OAAI,MAAQC,EAAkBG,KAAKC,MAAMJ,GAEd,oBAAhBF,EACAA,IAEAA,KAXuC,mBAG/CvB,EAH+C,KAGxC8B,EAHwC,KAoBtD,OALAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUjC,MAClD,CAACwB,EAAaxB,IAGV,CAACA,EAAO8B,GCuCJI,MA3Df,WAAgB,IAAD,EACWb,EAAgB,OAAQ,IADnC,mBACNc,EADM,KACAC,EADA,OAESf,EAAgB,MAAO,IAFhC,mBAENgB,EAFM,KAEDC,EAFC,OAGOjB,EAAgB,KAAM,IAH7B,mBAGNkB,EAHM,KAGFC,EAHE,OAIetC,mBAAS,IAJxB,mBAINuC,EAJM,KAIEC,EAJF,KAsBb,OAhBAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,2BAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,kCAOR,KAEH,OAAO,kBAAMM,aAAaF,MAEzB,CAACR,EAAME,EAAKE,IAIb,oCACE,yBAAKlC,UAAU,iBACb,kBAAC,EAAD,CACEP,YAAY,OACZC,SAAS,MACTC,MAAOmC,EACPlC,SAAUmC,IAEZ,kBAAC,EAAD,CACEtC,YAAY,MACZC,SAAS,MACTC,MAAOqC,EACPpC,SAAUqC,IAEZ,kBAAC,EAAD,CACExC,YAAY,KACZC,SAAS,aACTC,MAAOuC,EACPtC,SAAUuC,KAId,yBAAKnC,UAAU,QACb,4BACEyC,MAAM,SACNC,YAAY,IACZC,QAAQ,gBACRC,MAAM,OACNC,OAAO,OACPT,OAAQA,OCnDlBU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ca70a0ae.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCompressAlt,  faExpandAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Editor(props) {\r\n    const { displayName, \r\n        language, \r\n        value, \r\n        onChange \r\n    } = props;\r\n\r\n    const [open, setOpen] = useState(true);\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"expand-collapse-btn\"\r\n                    onClick={() => setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n                </button>\r\n            </div>\r\n\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    lineNumbers: true,\r\n                    theme: 'material'\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Editor;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, intialValue) {\r\n    const prefixedKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey);\r\n\r\n        if (null != jsonValue) return JSON.parse(jsonValue);\r\n\r\n        if (typeof intialValue === 'function') {\r\n            return intialValue();\r\n        } else {\r\n            return intialValue;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n    }, [prefixedKey, value]);\r\n\r\n\r\n    return [value, setValue];\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '');\n  const [css, setCss] = useLocalStorage('css', '');\n  const [js, setJs] = useLocalStorage('js', '');\n  const [srcDoc, setSrcDoc] = useState('');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(\n        `<html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>`\n      )\n    }, 250);\n    // We need to clear the timeout so that anything user writes in between the timer won't get set into the timer queue\n    return () => clearTimeout(timeout);\n\n  }, [html, css, js])\n\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor \n          displayName=\"HTML\" \n          language=\"xml\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor \n          displayName=\"CSS\" \n          language=\"css\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor \n          displayName=\"JS\" \n          language=\"javascript\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n\n      <div className=\"pane\">\n        <iframe\n          title=\"output\"\n          frameBorder=\"0\"\n          sandbox=\"allow-scripts\"\n          width=\"100%\"\n          height=\"100%\"\n          srcDoc={srcDoc}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}